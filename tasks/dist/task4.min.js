"use strict";function getMostFuelEfficientCars(o,e){return o.every(function(o){return o.fuelConsumption<6})?o.filter(function(o){return o.brand===e&&o.fuelConsumption<6}).sort(function(o,e){return o.fuelConsumption===e.fuelConsumption?o.model.localeCompare(e.model):o.fuelConsumption-e.fuelConsumption}):[]}var cars=[{brand:"Toyota",model:"Corolla",fuelConsumption:5.2},{brand:"Honda",model:"Civic",fuelConsumption:5.9},{brand:"Toyota",model:"Camry",fuelConsumption:5.5},{brand:"Ford",model:"Focus",fuelConsumption:6.1},{brand:"Honda",model:"Accord",fuelConsumption:5.8},{brand:"Audi",model:"A3",fuelConsumption:5.4},{brand:"Audi",model:"Q5",fuelConsumption:5.7},{brand:"Dodge",model:"Charger",fuelConsumption:5.8},{brand:"Dodge",model:"Durango",fuelConsumption:5.6}];console.log(getMostFuelEfficientCars(cars,"Toyota")),console.log(getMostFuelEfficientCars(cars,"Honda")),console.log(getMostFuelEfficientCars(cars,"Audi")),console.log(getMostFuelEfficientCars(cars,"Dodge")),console.log(getMostFuelEfficientCars(cars,"Ford")),module.exports=getMostFuelEfficientCars;
//# sourceMappingURL=task4.min.js.map
